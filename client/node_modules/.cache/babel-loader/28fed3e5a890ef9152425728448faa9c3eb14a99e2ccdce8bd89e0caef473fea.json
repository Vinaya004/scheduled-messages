{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vindi\\\\OneDrive\\\\Documents\\\\whatschat\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport Infobar from '../Infobar/Infobar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [scheduledMessages, setScheduledMessages] = useState([]);\n  const [scheduleTime, setScheduleTime] = useState(null);\n  const ENDPOINT = 'http://localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    socket.on('message', message => {\n      // Add messages regardless of sender\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.disconnect();\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      const currentTime = new Date();\n      const scheduledTime = new Date(scheduleTime);\n      if (scheduledTime && scheduledTime > currentTime) {\n        const timeDiff = scheduledTime - currentTime;\n\n        // Store the message as scheduled\n        setScheduledMessages(prev => [...prev, {\n          text: message,\n          time: scheduledTime\n        }]);\n\n        // Set a timeout to send the message at the scheduled time\n        setTimeout(() => {\n          const msgToSend = {\n            text: message,\n            user: name,\n            time: new Date()\n          };\n          socket.emit('sendMessage', msgToSend, () => {\n            setMessages(prev => [...prev, msgToSend]); // Add to messages\n          });\n          // Remove the message from the scheduled messages\n          setScheduledMessages(prev => prev.filter(msg => msg.time !== scheduledTime));\n        }, timeDiff);\n      } else {\n        const msgToSend = {\n          text: message,\n          user: name,\n          time: new Date()\n        };\n        socket.emit('sendMessage', msgToSend, () => {\n          setMessages(prev => [...prev, msgToSend]); // Add to messages\n        });\n      }\n\n      // Reset input and schedule time after sending\n      setMessage('');\n      setScheduleTime(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scheduledMessages\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          defaultValue: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Scheduled Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), scheduledMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: `${msg.time.toLocaleString()}: ${msg.text}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage,\n        scheduleTime: scheduleTime,\n        setScheduleTime: setScheduleTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"xvmgCkvMArkmKVGhcwohc3OlAVA=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","queryString","io","useLocation","Infobar","Input","Messages","TextContainer","jsxDEV","_jsxDEV","socket","Chat","_s","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","scheduledMessages","setScheduledMessages","scheduleTime","setScheduleTime","ENDPOINT","parse","search","emit","error","alert","on","prevMessages","disconnect","off","sendMessage","event","preventDefault","currentTime","Date","scheduledTime","timeDiff","prev","text","time","setTimeout","msgToSend","user","filter","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","value","disabled","map","index","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/vindi/OneDrive/Documents/whatschat/client/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Infobar from '../Infobar/Infobar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport './Chat.css';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [scheduledMessages, setScheduledMessages] = useState([]);\r\n    const [scheduleTime, setScheduleTime] = useState(null);\r\n    const ENDPOINT = 'http://localhost:5000';\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, (error) => {\r\n            if (error) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        socket.on('message', (message) => {\r\n            // Add messages regardless of sender\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        socket.on(\"roomData\", ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n            socket.off();\r\n        };\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            const currentTime = new Date();\r\n            const scheduledTime = new Date(scheduleTime);\r\n    \r\n            if (scheduledTime && scheduledTime > currentTime) {\r\n                const timeDiff = scheduledTime - currentTime;\r\n    \r\n                // Store the message as scheduled\r\n                setScheduledMessages((prev) => [...prev, { text: message, time: scheduledTime }]);\r\n    \r\n                // Set a timeout to send the message at the scheduled time\r\n                setTimeout(() => {\r\n                    const msgToSend = { text: message, user: name, time: new Date() };\r\n                    socket.emit('sendMessage', msgToSend, () => {\r\n                        setMessages((prev) => [...prev, msgToSend]); // Add to messages\r\n                    });\r\n                    // Remove the message from the scheduled messages\r\n                    setScheduledMessages((prev) => prev.filter((msg) => msg.time !== scheduledTime));\r\n                }, timeDiff);\r\n            } else {\r\n                const msgToSend = { text: message, user: name, time: new Date() };\r\n                socket.emit('sendMessage', msgToSend, () => {\r\n                    setMessages((prev) => [...prev, msgToSend]); // Add to messages\r\n                });\r\n            }\r\n    \r\n            // Reset input and schedule time after sending\r\n            setMessage('');\r\n            setScheduleTime(null);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className='outerContainer'>\r\n            <div className='container'>\r\n                <Infobar room={room} />\r\n                <div className=\"scheduledMessages\">\r\n                    <select className=\"dropdown\" defaultValue=\"\">\r\n                        <option value=\"\" disabled>Scheduled Messages</option>\r\n                        {scheduledMessages.map((msg, index) => (\r\n                            <option key={index}>\r\n                                {`${msg.time.toLocaleString()}: ${msg.text}`}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <Messages messages={messages} name={name} />\r\n                <Input \r\n                    message={message} \r\n                    setMessage={setMessage} \r\n                    sendMessage={sendMessage} \r\n                    scheduleTime={scheduleTime} \r\n                    setScheduleTime={setScheduleTime} \r\n                />\r\n            </div>\r\n            <TextContainer users={users} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}