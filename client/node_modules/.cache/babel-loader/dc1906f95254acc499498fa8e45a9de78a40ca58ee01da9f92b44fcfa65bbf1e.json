{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vindi\\\\OneDrive\\\\Documents\\\\whatschat\\\\client\\\\src\\\\components\\\\Messages\\\\Message\\\\Message.js\";\n// import React from 'react';\n\n// import './Message.css';\n\n// import ReactEmoji from 'react-emoji';\n\n// const Message = ({ message: { user,text }, name=\"ananymous\" }) => {\n// //   let isSentByCurrentUser = false;\n// //   if (!name) {\n// //     throw new Error(\"Name is required\");\n// // }\n\n//   const trimmedName = name.trim().toLowerCase();\n//   const isSentByCurrentUser=user===trimmedName;\n\n//   // if(user === trimmedName) {\n//   //   isSentByCurrentUser = true;\n//   // }\n\n//   return (\n//     isSentByCurrentUser\n//       ? (\n//         <div className=\"messageContainer justifyEnd\">\n//           <p className=\"sentText pr-10\">{trimmedName}</p>\n//           <div className=\"messageBox backgroundBlue\">\n//             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text||\"\")}</p>\n//           </div>\n//         </div>\n//         )\n//         : (\n//           <div className=\"messageContainer justifyStart\">\n//             <div className=\"messageBox backgroundLight\">\n//               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text||\"\")}</p>\n//             </div>\n//             <p className=\"sentText pl-10 \">{user}</p>\n//           </div>\n//         )\n//   );\n// }\n\n// export default Message;\n\n// import React from 'react';\n\n// import './Message.css';\n\n// import ReactEmoji from 'react-emoji';\n\n// const Message = ({ message: { text, user }, name=\"Ananymous\" }) => {\n//   let isSentByCurrentUser = false;\n\n//   const trimmedName = name.trim().toLowerCase();\n\n//   if(user === trimmedName) {\n//     isSentByCurrentUser = true;\n//   }\n\n//   return (\n//     isSentByCurrentUser\n//       ? (\n//         <div className=\"messageContainer justifyEnd\">\n//           <p className=\"sentText pr-10\">{trimmedName}</p>\n//           <div className=\"messageBox backgroundBlue\">\n//             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n//           </div>\n//         </div>\n//         )\n//         : (\n//           <div className=\"messageContainer justifyStart\">\n//             <div className=\"messageBox backgroundLight\">\n//               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n//             </div>\n//             <p className=\"sentText pl-10 \">{user}</p>\n//           </div>\n//         )\n//   );\n// }\n\n// export default Message;\n\n// import React from 'react'; \n// import './Message.css';\n// import ReactEmoji from 'react-emoji';\n\n// const Message = ({ message: { text, user, seen }, name = \"Anonymous\" }) => {\n//   let isSentByCurrentUser = false;\n//   const trimmedName = name.trim().toLowerCase();\n\n//   if (user === trimmedName) {\n//     isSentByCurrentUser = true;\n//   }\n\n//   return (\n//     <div className={`messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`}>\n//       {isSentByCurrentUser && <p className=\"sentText pr-10\">{trimmedName}</p>}\n//       <div className={`messageBox ${isSentByCurrentUser ? 'backgroundBlue' : 'backgroundLight'}`}>\n//         <p className={`messageText ${isSentByCurrentUser ? 'colorWhite' : 'colorDark'}`}>\n//           {ReactEmoji.emojify(text)}\n//         </p>\n//       </div>\n//       {!isSentByCurrentUser && <p className=\"sentText pl-10\">{user}</p>}\n//       {seen && <span className=\"seenTick\">✓</span>} {/* Tick mark for seen messages */}\n//     </div>\n//   );\n// };\n\n// export default Message;\n\nimport React from 'react';\nimport './Message.css';\nimport ReactEmoji from 'react-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  message: {\n    text,\n    user,\n    seen\n  },\n  name = \"Anonymous\"\n}) => {\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`,\n    children: [isSentByCurrentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageBox backgroundBlue\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messageText colorWhite\",\n        children: ReactEmoji.emojify(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), seen && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"seenTick\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), !isSentByCurrentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageBox backgroundLight\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messageText colorDark\",\n        children: ReactEmoji.emojify(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","ReactEmoji","jsxDEV","_jsxDEV","Message","message","text","user","seen","name","isSentByCurrentUser","trimmedName","trim","toLowerCase","className","children","emojify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vindi/OneDrive/Documents/whatschat/client/src/components/Messages/Message/Message.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// import './Message.css';\r\n\r\n// import ReactEmoji from 'react-emoji';\r\n\r\n// const Message = ({ message: { user,text }, name=\"ananymous\" }) => {\r\n// //   let isSentByCurrentUser = false;\r\n// //   if (!name) {\r\n// //     throw new Error(\"Name is required\");\r\n// // }\r\n\r\n//   const trimmedName = name.trim().toLowerCase();\r\n//   const isSentByCurrentUser=user===trimmedName;\r\n\r\n//   // if(user === trimmedName) {\r\n//   //   isSentByCurrentUser = true;\r\n//   // }\r\n\r\n//   return (\r\n//     isSentByCurrentUser\r\n//       ? (\r\n//         <div className=\"messageContainer justifyEnd\">\r\n//           <p className=\"sentText pr-10\">{trimmedName}</p>\r\n//           <div className=\"messageBox backgroundBlue\">\r\n//             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text||\"\")}</p>\r\n//           </div>\r\n//         </div>\r\n//         )\r\n//         : (\r\n//           <div className=\"messageContainer justifyStart\">\r\n//             <div className=\"messageBox backgroundLight\">\r\n//               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text||\"\")}</p>\r\n//             </div>\r\n//             <p className=\"sentText pl-10 \">{user}</p>\r\n//           </div>\r\n//         )\r\n//   );\r\n// }\r\n\r\n// export default Message;\r\n\r\n// import React from 'react';\r\n\r\n// import './Message.css';\r\n\r\n// import ReactEmoji from 'react-emoji';\r\n\r\n// const Message = ({ message: { text, user }, name=\"Ananymous\" }) => {\r\n//   let isSentByCurrentUser = false;\r\n\r\n//   const trimmedName = name.trim().toLowerCase();\r\n\r\n//   if(user === trimmedName) {\r\n//     isSentByCurrentUser = true;\r\n//   }\r\n\r\n//   return (\r\n//     isSentByCurrentUser\r\n//       ? (\r\n//         <div className=\"messageContainer justifyEnd\">\r\n//           <p className=\"sentText pr-10\">{trimmedName}</p>\r\n//           <div className=\"messageBox backgroundBlue\">\r\n//             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n//           </div>\r\n//         </div>\r\n//         )\r\n//         : (\r\n//           <div className=\"messageContainer justifyStart\">\r\n//             <div className=\"messageBox backgroundLight\">\r\n//               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n//             </div>\r\n//             <p className=\"sentText pl-10 \">{user}</p>\r\n//           </div>\r\n//         )\r\n//   );\r\n// }\r\n\r\n// export default Message;\r\n\r\n\r\n\r\n\r\n// import React from 'react'; \r\n// import './Message.css';\r\n// import ReactEmoji from 'react-emoji';\r\n\r\n// const Message = ({ message: { text, user, seen }, name = \"Anonymous\" }) => {\r\n//   let isSentByCurrentUser = false;\r\n//   const trimmedName = name.trim().toLowerCase();\r\n\r\n//   if (user === trimmedName) {\r\n//     isSentByCurrentUser = true;\r\n//   }\r\n\r\n//   return (\r\n//     <div className={`messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`}>\r\n//       {isSentByCurrentUser && <p className=\"sentText pr-10\">{trimmedName}</p>}\r\n//       <div className={`messageBox ${isSentByCurrentUser ? 'backgroundBlue' : 'backgroundLight'}`}>\r\n//         <p className={`messageText ${isSentByCurrentUser ? 'colorWhite' : 'colorDark'}`}>\r\n//           {ReactEmoji.emojify(text)}\r\n//         </p>\r\n//       </div>\r\n//       {!isSentByCurrentUser && <p className=\"sentText pl-10\">{user}</p>}\r\n//       {seen && <span className=\"seenTick\">✓</span>} {/* Tick mark for seen messages */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Message;\r\n\r\n\r\n\r\nimport React from 'react'; \r\nimport './Message.css';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({ message: { text, user, seen }, name = \"Anonymous\" }) => {\r\n  let isSentByCurrentUser = false;\r\n  const trimmedName = name.trim().toLowerCase();\r\n\r\n  if (user === trimmedName) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  return (\r\n    <div className={`messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`}>\r\n      {isSentByCurrentUser && (\r\n        <div className=\"messageBox backgroundBlue\">\r\n          <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n          {seen && <span className=\"seenTick\">✓</span>}\r\n        </div>\r\n      )}\r\n      {!isSentByCurrentUser && (\r\n        <div className=\"messageBox backgroundLight\">\r\n          <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO,EAAE;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAK,CAAC;EAAEC,IAAI,GAAG;AAAY,CAAC,KAAK;EACzE,IAAIC,mBAAmB,GAAG,KAAK;EAC/B,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAE7C,IAAIN,IAAI,KAAKI,WAAW,EAAE;IACxBD,mBAAmB,GAAG,IAAI;EAC5B;EAEA,oBACEP,OAAA;IAAKW,SAAS,EAAE,oBAAoBJ,mBAAmB,GAAG,YAAY,GAAG,cAAc,EAAG;IAAAK,QAAA,GACvFL,mBAAmB,iBAClBP,OAAA;MAAKW,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCZ,OAAA;QAAGW,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAEd,UAAU,CAACe,OAAO,CAACV,IAAI;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnEZ,IAAI,iBAAIL,OAAA;QAAMW,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN,EACA,CAACV,mBAAmB,iBACnBP,OAAA;MAAKW,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCZ,OAAA;QAAGW,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEd,UAAU,CAACe,OAAO,CAACV,IAAI;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIjB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}