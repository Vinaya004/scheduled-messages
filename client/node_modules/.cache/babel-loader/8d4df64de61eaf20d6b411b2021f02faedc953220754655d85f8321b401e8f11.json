{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vindi\\\\OneDrive\\\\Documents\\\\whatschat\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect,useState } from 'react'\n// import queryString from 'query-string';\n// import io from 'socket.io-client';\n// import { useLocation } from 'react-router-dom';\n// // import { eventNames } from 'process';\n\n// let socket;\n\n// const Chat=()=>{\n//     const location = useLocation();\n//     const [name,setName]=useState('');\n//     const [room,setRoom]=useState('');\n//     const [message,setMessage]=useState('');\n//     const [messages,setMessages]=useState([]);\n//     const ENDPOINT='localhost:5000'\n//     useEffect(() => {\n//         if (location.search) { // Ensure location.search is defined\n//             const {name,room} = queryString.parse(location.search);\n\n//             socket=io(ENDPOINT);\n//             setName(name);\n//             setRoom(room); \n\n//             socket.on('connect',()=>{\n//                 console.log('Connected to the server');\n//                 // socket.emit('join',{name,room},({error})=>{\n//                 //     alert(error);\n//                 // });\n//                 socket.emit('join',{name,room},()=>{\n//                 });\n//             });\n//             return ()=>{\n//                 socket.disconnect();\n//                 socket.off();\n//             };\n\n//             // console.log(socket);  \n//                   // logs the parsed object\n//         }\n//     }, [ENDPOINT,location.search]);\n\n//     useEffect(()=>{\n//         socket.on('message',()=>{\n//             setMessages([...messages,message]);        \n//         })\n//     },[messages]);\n\n// const sendMessage=(event)=>{\n//     event.preventDefault();\n//     if(message){\n//         socket.emit('sendMessage',message,()=>{\n//             setMessage('')\n//         })\n//     }\n// }\n// console.log(message,messages);\n\n//     return <div className='outerContainer'>\n//         <div className='container'>\n//             <input \n//             value={message} \n//             onChange={(event)=>{\n//                 setMessage(event.target.value)\n//             }}\n//             onKeyDown={event=>event.key==='Enter'?sendMessage(event):null}></input>\n//         </div>\n//     </div>;\n\n// };\n// export default Chat;\n\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000'; // Add http:// for socket.io connection\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.disconnect();\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message && socket) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        onKeyDown: event => event.key === 'Enter' && sendMessage(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [msg.user, \": \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"f77Kf5bMhgIBAF+JSGEUhJHf6Tc=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","queryString","io","useLocation","jsxDEV","_jsxDEV","socket","Chat","_s","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","prevMessages","disconnect","off","sendMessage","event","preventDefault","className","children","value","onChange","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","user","text","_c","$RefreshReg$"],"sources":["C:/Users/vindi/OneDrive/Documents/whatschat/client/src/components/Chat.js"],"sourcesContent":["// import React, { useEffect,useState } from 'react'\r\n// import queryString from 'query-string';\r\n// import io from 'socket.io-client';\r\n// import { useLocation } from 'react-router-dom';\r\n// // import { eventNames } from 'process';\r\n\r\n// let socket;\r\n\r\n// const Chat=()=>{\r\n//     const location = useLocation();\r\n//     const [name,setName]=useState('');\r\n//     const [room,setRoom]=useState('');\r\n//     const [message,setMessage]=useState('');\r\n//     const [messages,setMessages]=useState([]);\r\n//     const ENDPOINT='localhost:5000'\r\n//     useEffect(() => {\r\n//         if (location.search) { // Ensure location.search is defined\r\n//             const {name,room} = queryString.parse(location.search);\r\n\r\n//             socket=io(ENDPOINT);\r\n//             setName(name);\r\n//             setRoom(room); \r\n\r\n//             socket.on('connect',()=>{\r\n//                 console.log('Connected to the server');\r\n//                 // socket.emit('join',{name,room},({error})=>{\r\n//                 //     alert(error);\r\n//                 // });\r\n//                 socket.emit('join',{name,room},()=>{\r\n//                 });\r\n//             });\r\n//             return ()=>{\r\n//                 socket.disconnect();\r\n//                 socket.off();\r\n//             };\r\n\r\n            \r\n//             // console.log(socket);  \r\n//                   // logs the parsed object\r\n//         }\r\n//     }, [ENDPOINT,location.search]);\r\n\r\n//     useEffect(()=>{\r\n//         socket.on('message',()=>{\r\n//             setMessages([...messages,message]);        \r\n//         })\r\n//     },[messages]);\r\n\r\n\r\n// const sendMessage=(event)=>{\r\n//     event.preventDefault();\r\n//     if(message){\r\n//         socket.emit('sendMessage',message,()=>{\r\n//             setMessage('')\r\n//         })\r\n//     }\r\n// }\r\n// console.log(message,messages);\r\n\r\n//     return <div className='outerContainer'>\r\n//         <div className='container'>\r\n//             <input \r\n//             value={message} \r\n//             onChange={(event)=>{\r\n//                 setMessage(event.target.value)\r\n//             }}\r\n//             onKeyDown={event=>event.key==='Enter'?sendMessage(event):null}></input>\r\n//         </div>\r\n//     </div>;\r\n    \r\n    \r\n// };\r\n// export default Chat;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'http://localhost:5000'; // Add http:// for socket.io connection\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, (error) => {\r\n            if (error) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        socket.on('message', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n            socket.off();\r\n        };\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (message && socket) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='outerContainer'>\r\n            <div className='container'>\r\n                <input\r\n                    value={message}\r\n                    onChange={(event) => setMessage(event.target.value)}\r\n                    onKeyDown={(event) => event.key === 'Enter' && sendMessage(event)}\r\n                />\r\n            </div>\r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>{msg.user}: {msg.text}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}