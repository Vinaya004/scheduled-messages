{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vindi\\\\OneDrive\\\\Documents\\\\whatschat\\\\client\\\\src\\\\components\\\\Messages\\\\Message\\\\Message.js\";\n// // // // import React from 'react';\n\n// // // // import './Message.css';\n\n// // // // import ReactEmoji from 'react-emoji';\n\n// // // // const Message = ({ message: { user,text }, name=\"ananymous\" }) => {\n// // // // //   let isSentByCurrentUser = false;\n// // // // //   if (!name) {\n// // // // //     throw new Error(\"Name is required\");\n// // // // // }\n\n// // // //   const trimmedName = name.trim().toLowerCase();\n// // // //   const isSentByCurrentUser=user===trimmedName;\n\n// // // //   // if(user === trimmedName) {\n// // // //   //   isSentByCurrentUser = true;\n// // // //   // }\n\n// // // //   return (\n// // // //     isSentByCurrentUser\n// // // //       ? (\n// // // //         <div className=\"messageContainer justifyEnd\">\n// // // //           <p className=\"sentText pr-10\">{trimmedName}</p>\n// // // //           <div className=\"messageBox backgroundBlue\">\n// // // //             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text||\"\")}</p>\n// // // //           </div>\n// // // //         </div>\n// // // //         )\n// // // //         : (\n// // // //           <div className=\"messageContainer justifyStart\">\n// // // //             <div className=\"messageBox backgroundLight\">\n// // // //               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text||\"\")}</p>\n// // // //             </div>\n// // // //             <p className=\"sentText pl-10 \">{user}</p>\n// // // //           </div>\n// // // //         )\n// // // //   );\n// // // // }\n\n// // // // export default Message;\n\n// // // // import React from 'react';\n\n// // // // import './Message.css';\n\n// // // // import ReactEmoji from 'react-emoji';\n\n// // // // const Message = ({ message: { text, user }, name=\"Ananymous\" }) => {\n// // // //   let isSentByCurrentUser = false;\n\n// // // //   const trimmedName = name.trim().toLowerCase();\n\n// // // //   if(user === trimmedName) {\n// // // //     isSentByCurrentUser = true;\n// // // //   }\n\n// // // //   return (\n// // // //     isSentByCurrentUser\n// // // //       ? (\n// // // //         <div className=\"messageContainer justifyEnd\">\n// // // //           <p className=\"sentText pr-10\">{trimmedName}</p>\n// // // //           <div className=\"messageBox backgroundBlue\">\n// // // //             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n// // // //           </div>\n// // // //         </div>\n// // // //         )\n// // // //         : (\n// // // //           <div className=\"messageContainer justifyStart\">\n// // // //             <div className=\"messageBox backgroundLight\">\n// // // //               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n// // // //             </div>\n// // // //             <p className=\"sentText pl-10 \">{user}</p>\n// // // //           </div>\n// // // //         )\n// // // //   );\n// // // // }\n\n// // // // export default Message;\n\n// // // import React from 'react';\n\n// // // import './Message.css';\n\n// // // import ReactEmoji from 'react-emoji';\n\n// // // const Message = ({ message: { text, user }, name = \"Anonymous\" }) => {\n// // //     let isSentByCurrentUser = false;\n// // //     const trimmedName = name.trim().toLowerCase();\n\n// // //     if (user === trimmedName) {\n// // //         isSentByCurrentUser = true;\n// // //     }\n\n// // //     return (\n// // //         isSentByCurrentUser ? (\n// // //             <div className=\"messageContainer justifyEnd\">\n// // //                 <p className=\"sentText pr-10\">{trimmedName}</p>\n// // //                 <div className=\"messageBox backgroundBlue\">\n// // //                     <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n// // //                 </div>\n// // //             </div>\n// // //         ) : (\n// // //             <div className=\"messageContainer justifyStart\">\n// // //                 <div className=\"messageBox backgroundLight\">\n// // //                     <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n// // //                 </div>\n// // //                 <p className=\"sentText pl-10 \">{user}</p>\n// // //             </div>\n// // //         )\n// // //     );\n// // // };\n\n// // // export default Message;\n\n// // import React from 'react';\n// // import './Message.css';\n// // import ReactEmoji from 'react-emoji';\n\n// // const Message = ({ message: { text, user }, name = \"Anonymous\" }) => {\n// //     const isSentByCurrentUser = user === name.trim().toLowerCase();\n\n// //     return (\n// //         isSentByCurrentUser ? (\n// //             <div className=\"messageContainer justifyEnd\">\n// //                 <p className=\"sentText pr-10\">{name}</p>\n// //                 <div className=\"messageBox backgroundBlue\">\n// //                     <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n// //                 </div>\n// //             </div>\n// //         ) : (\n// //             <div className=\"messageContainer justifyStart\">\n// //                 <div className=\"messageBox backgroundLight\">\n// //                     <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n// //                 </div>\n// //                 <p className=\"sentText pl-10\">{user}</p>\n// //             </div>\n// //         )\n// //     );\n// // }\n\n// // export default Message;\n\n// import React from 'react';\n// import './Message.css';\n// import ReactEmoji from 'react-emoji';\n\n// const Message = ({ message: { text, user, time }, name = \"Anonymous\" }) => {\n//     let isSentByCurrentUser = false;\n//     const trimmedName = name.trim().toLowerCase();\n\n//     if (user === trimmedName) {\n//         isSentByCurrentUser = true;\n//     }\n\n//     const formattedTime = time ? new Date(time).toLocaleTimeString() : ''; // Format the time\n\n//     return (\n//         isSentByCurrentUser\n//             ? (\n//                 <div className=\"messageContainer justifyEnd\">\n//                     <p className=\"sentText pr-10\">{trimmedName}</p>\n//                     <div className=\"messageBox backgroundBlue\">\n//                         <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n//                         <span className=\"messageTime\">{formattedTime}</span>\n//                     </div>\n//                 </div>\n//             )\n//             : (\n//                 <div className=\"messageContainer justifyStart\">\n//                     <div className=\"messageBox backgroundLight\">\n//                         <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n//                         <span className=\"messageTime\">{formattedTime}</span>\n//                     </div>\n//                     <p className=\"sentText pl-10\">{user}</p>\n//                 </div>\n//             )\n//     );\n// };\n\n// export default Message;\n\nimport React from 'react';\nimport './Message.css';\nimport ReactEmoji from 'react-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  message: {\n    text,\n    user,\n    time\n  },\n  name = \"Anonymous\"\n}) => {\n  const trimmedName = name.trim().toLowerCase();\n  const isSentByCurrentUser = user === trimmedName;\n\n  // Format the time for display\n  const formattedTime = time ? new Date(time).toLocaleTimeString() : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `messageBox ${isSentByCurrentUser ? 'backgroundBlue' : 'backgroundLight'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messageText\",\n        children: ReactEmoji.emojify(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"messageTime\",\n        children: formattedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), !isSentByCurrentUser && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sentText pl-10\",\n      children: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","ReactEmoji","jsxDEV","_jsxDEV","Message","message","text","user","time","name","trimmedName","trim","toLowerCase","isSentByCurrentUser","formattedTime","Date","toLocaleTimeString","className","children","emojify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vindi/OneDrive/Documents/whatschat/client/src/components/Messages/Message/Message.js"],"sourcesContent":["// // // // import React from 'react';\r\n\r\n// // // // import './Message.css';\r\n\r\n// // // // import ReactEmoji from 'react-emoji';\r\n\r\n// // // // const Message = ({ message: { user,text }, name=\"ananymous\" }) => {\r\n// // // // //   let isSentByCurrentUser = false;\r\n// // // // //   if (!name) {\r\n// // // // //     throw new Error(\"Name is required\");\r\n// // // // // }\r\n\r\n// // // //   const trimmedName = name.trim().toLowerCase();\r\n// // // //   const isSentByCurrentUser=user===trimmedName;\r\n\r\n// // // //   // if(user === trimmedName) {\r\n// // // //   //   isSentByCurrentUser = true;\r\n// // // //   // }\r\n\r\n// // // //   return (\r\n// // // //     isSentByCurrentUser\r\n// // // //       ? (\r\n// // // //         <div className=\"messageContainer justifyEnd\">\r\n// // // //           <p className=\"sentText pr-10\">{trimmedName}</p>\r\n// // // //           <div className=\"messageBox backgroundBlue\">\r\n// // // //             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text||\"\")}</p>\r\n// // // //           </div>\r\n// // // //         </div>\r\n// // // //         )\r\n// // // //         : (\r\n// // // //           <div className=\"messageContainer justifyStart\">\r\n// // // //             <div className=\"messageBox backgroundLight\">\r\n// // // //               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text||\"\")}</p>\r\n// // // //             </div>\r\n// // // //             <p className=\"sentText pl-10 \">{user}</p>\r\n// // // //           </div>\r\n// // // //         )\r\n// // // //   );\r\n// // // // }\r\n\r\n// // // // export default Message;\r\n\r\n// // // // import React from 'react';\r\n\r\n// // // // import './Message.css';\r\n\r\n// // // // import ReactEmoji from 'react-emoji';\r\n\r\n// // // // const Message = ({ message: { text, user }, name=\"Ananymous\" }) => {\r\n// // // //   let isSentByCurrentUser = false;\r\n\r\n// // // //   const trimmedName = name.trim().toLowerCase();\r\n\r\n// // // //   if(user === trimmedName) {\r\n// // // //     isSentByCurrentUser = true;\r\n// // // //   }\r\n\r\n// // // //   return (\r\n// // // //     isSentByCurrentUser\r\n// // // //       ? (\r\n// // // //         <div className=\"messageContainer justifyEnd\">\r\n// // // //           <p className=\"sentText pr-10\">{trimmedName}</p>\r\n// // // //           <div className=\"messageBox backgroundBlue\">\r\n// // // //             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n// // // //           </div>\r\n// // // //         </div>\r\n// // // //         )\r\n// // // //         : (\r\n// // // //           <div className=\"messageContainer justifyStart\">\r\n// // // //             <div className=\"messageBox backgroundLight\">\r\n// // // //               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n// // // //             </div>\r\n// // // //             <p className=\"sentText pl-10 \">{user}</p>\r\n// // // //           </div>\r\n// // // //         )\r\n// // // //   );\r\n// // // // }\r\n\r\n// // // // export default Message;\r\n\r\n\r\n\r\n\r\n\r\n// // // import React from 'react';\r\n\r\n// // // import './Message.css';\r\n\r\n// // // import ReactEmoji from 'react-emoji';\r\n\r\n// // // const Message = ({ message: { text, user }, name = \"Anonymous\" }) => {\r\n// // //     let isSentByCurrentUser = false;\r\n// // //     const trimmedName = name.trim().toLowerCase();\r\n\r\n// // //     if (user === trimmedName) {\r\n// // //         isSentByCurrentUser = true;\r\n// // //     }\r\n\r\n// // //     return (\r\n// // //         isSentByCurrentUser ? (\r\n// // //             <div className=\"messageContainer justifyEnd\">\r\n// // //                 <p className=\"sentText pr-10\">{trimmedName}</p>\r\n// // //                 <div className=\"messageBox backgroundBlue\">\r\n// // //                     <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n// // //                 </div>\r\n// // //             </div>\r\n// // //         ) : (\r\n// // //             <div className=\"messageContainer justifyStart\">\r\n// // //                 <div className=\"messageBox backgroundLight\">\r\n// // //                     <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n// // //                 </div>\r\n// // //                 <p className=\"sentText pl-10 \">{user}</p>\r\n// // //             </div>\r\n// // //         )\r\n// // //     );\r\n// // // };\r\n\r\n// // // export default Message;\r\n\r\n\r\n\r\n\r\n// // import React from 'react';\r\n// // import './Message.css';\r\n// // import ReactEmoji from 'react-emoji';\r\n\r\n// // const Message = ({ message: { text, user }, name = \"Anonymous\" }) => {\r\n// //     const isSentByCurrentUser = user === name.trim().toLowerCase();\r\n\r\n// //     return (\r\n// //         isSentByCurrentUser ? (\r\n// //             <div className=\"messageContainer justifyEnd\">\r\n// //                 <p className=\"sentText pr-10\">{name}</p>\r\n// //                 <div className=\"messageBox backgroundBlue\">\r\n// //                     <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n// //                 </div>\r\n// //             </div>\r\n// //         ) : (\r\n// //             <div className=\"messageContainer justifyStart\">\r\n// //                 <div className=\"messageBox backgroundLight\">\r\n// //                     <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n// //                 </div>\r\n// //                 <p className=\"sentText pl-10\">{user}</p>\r\n// //             </div>\r\n// //         )\r\n// //     );\r\n// // }\r\n\r\n// // export default Message;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import './Message.css';\r\n// import ReactEmoji from 'react-emoji';\r\n\r\n// const Message = ({ message: { text, user, time }, name = \"Anonymous\" }) => {\r\n//     let isSentByCurrentUser = false;\r\n//     const trimmedName = name.trim().toLowerCase();\r\n\r\n//     if (user === trimmedName) {\r\n//         isSentByCurrentUser = true;\r\n//     }\r\n\r\n//     const formattedTime = time ? new Date(time).toLocaleTimeString() : ''; // Format the time\r\n\r\n//     return (\r\n//         isSentByCurrentUser\r\n//             ? (\r\n//                 <div className=\"messageContainer justifyEnd\">\r\n//                     <p className=\"sentText pr-10\">{trimmedName}</p>\r\n//                     <div className=\"messageBox backgroundBlue\">\r\n//                         <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n//                         <span className=\"messageTime\">{formattedTime}</span>\r\n//                     </div>\r\n//                 </div>\r\n//             )\r\n//             : (\r\n//                 <div className=\"messageContainer justifyStart\">\r\n//                     <div className=\"messageBox backgroundLight\">\r\n//                         <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n//                         <span className=\"messageTime\">{formattedTime}</span>\r\n//                     </div>\r\n//                     <p className=\"sentText pl-10\">{user}</p>\r\n//                 </div>\r\n//             )\r\n//     );\r\n// };\r\n\r\n// export default Message;\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport './Message.css';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({ message: { text, user, time }, name = \"Anonymous\" }) => {\r\n    const trimmedName = name.trim().toLowerCase();\r\n    const isSentByCurrentUser = user === trimmedName;\r\n\r\n    // Format the time for display\r\n    const formattedTime = time ? new Date(time).toLocaleTimeString() : '';\r\n\r\n    return (\r\n        <div className={`messageContainer ${isSentByCurrentUser ? 'justifyEnd' : 'justifyStart'}`}>\r\n            <div className={`messageBox ${isSentByCurrentUser ? 'backgroundBlue' : 'backgroundLight'}`}>\r\n                <p className=\"messageText\">{ReactEmoji.emojify(text)}</p>\r\n                <span className=\"messageTime\">{formattedTime}</span> {/* Add time display */}\r\n            </div>\r\n            {!isSentByCurrentUser && <p className=\"sentText pl-10\">{user}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO,EAAE;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAK,CAAC;EAAEC,IAAI,GAAG;AAAY,CAAC,KAAK;EACvE,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC7C,MAAMC,mBAAmB,GAAGN,IAAI,KAAKG,WAAW;;EAEhD;EACA,MAAMI,aAAa,GAAGN,IAAI,GAAG,IAAIO,IAAI,CAACP,IAAI,CAAC,CAACQ,kBAAkB,CAAC,CAAC,GAAG,EAAE;EAErE,oBACIb,OAAA;IAAKc,SAAS,EAAE,oBAAoBJ,mBAAmB,GAAG,YAAY,GAAG,cAAc,EAAG;IAAAK,QAAA,gBACtFf,OAAA;MAAKc,SAAS,EAAE,cAAcJ,mBAAmB,GAAG,gBAAgB,GAAG,iBAAiB,EAAG;MAAAK,QAAA,gBACvFf,OAAA;QAAGc,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEjB,UAAU,CAACkB,OAAO,CAACb,IAAI;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDpB,OAAA;QAAMc,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEJ;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACL,CAACV,mBAAmB,iBAAIV,OAAA;MAAGc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEX;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAACC,EAAA,GAhBIpB,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}